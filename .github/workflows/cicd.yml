name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        coverage: xdebug
        extensions: ast
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: ./run-tests.sh

    - name: Npm imstall
      run: npm install

    - name: Deploy
      if: contains(github.ref, 'main')
      run: rm .env && ./deploy.sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
        REAL_AWS_ACCESS_KEY_ID: ${{ secrets.REAL_AWS_ACCESS_KEY_ID }}
        REAL_AWS_SECRET_ACCESS_KEY: ${{ secrets.REAL_AWS_SECRET_ACCESS_KEY }}
        DEBUG_IPS: ${{ secrets.DEBUG_IPS }}
        PROXY_COUNT: ${{ secrets.PROXY_COUNT }}
